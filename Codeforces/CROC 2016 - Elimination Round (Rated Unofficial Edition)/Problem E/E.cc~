#include <bits/stdc++.h>

#define sd(x) scanf("%d",&x)
#define sd2(x,y) scanf("%d%d",&x,&y)
#define sd3(x,y,z) scanf("%d%d%d",&x,&y,&z)

#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define foreach(it, v) for(__typeof((v).begin()) it=(v).begin(); it != (v).end(); ++it)
#define meta __FUNCTION__,__LINE__

#define _ ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define __ freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);

using namespace std;

template<typename S, typename T> 
ostream& operator<<(ostream& out,pair<S,T> const& p){out<<'('<<p.fi<<", "<<p.se<<')';return out;}

template<typename T>
ostream& operator<<(ostream& out,vector<T> const& v){
int l=v.size();for(int i=0;i<l-1;i++)out<<v[i]<<' ';if(l>0)out<<v[l-1];return out;}

void tr(){cout << endl;}
template<typename S, typename ... Strings>
void tr(S x, const Strings&... rest){cout<<x<<' ';tr(rest...);}

typedef long long ll;
typedef pair<int,int> pii;

const int N = 2001000;
const ll MOD = 1e9 + 7;


int n, k;
string s;

ll dp[N], sum[N], last[N];

int main(){ _
	cin >> n >> k;
	cin >> s;
	
	if(k == 1){
		cout << s.length() + n + 1 << endl;
		return 0;
	}
	
	dp[0] = 1;
	sum[0] = 1;

	int l = s.length();
	
	for(int i = 1; i <= l; i++){
		int c = s[i-1] - 'a';
		dp[i] = sum[i-1] - ((last[c] - 1 >= 0)? sum[last[c] - 1] : 0);
		if(dp[i] >= MOD) dp[i] -= MOD;
		sum[i] = sum[i-1] + dp[i];
		if(sum[i] >= MOD) sum[i] -= MOD;
		last[c] = i;
		
	}
	
	
	for(int i = l+1; i <= l+n; i++){
		int mn = 1e9, c;
		for(int i = 0; i < 26; i++){
			if(last[i] < mn){
				mn = last[i];
				c = i;
			}
		}
		dp[i] = sum[i-1] - ((last[c] - 1 >= 0)? sum[last[c] - 1] : 0);
		if(dp[i] >= MOD) dp[i] -= MOD;
		sum[i] = sum[i-1] + dp[i];
		if(sum[i] >= MOD) sum[i] -= MOD;
		last[c] = i;
	}	

	cout << sum[n+l] << endl;
	
	return 0;
}
